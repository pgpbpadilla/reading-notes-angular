@startuml
'https://plantuml.com/component-diagram

title Structural directives: syntax sugar

[ng-template] <-- [ngIf] <<@Directive>>: extend
[ng-template] <-- [ngFor] <<@Directive>>: extend

newpage

title ng-template & ng-container


component "ng-template" as NgTemplate {
    [name] <<Attribute>> as TName
}
note bottom of NgTemplate
    !! Creates an extra
    DIV element
end note
note bottom of NgTemplate
    Example

    <ng-template #templateName" ...>
end note

component "ng-container" as NgContainer {
    component "ngTemplateOutlet" as TemplateOutlet {
        [Template Name] --> TName
        [Context] as C
        note right of C
            Provided by the Component
            Example:

            export class AppComponent {
                ctx = { ... context ... };
            }
        end note
    }
}
note bottom of NgContainer
    Example:

    <ng-container
        *ngTemplateOutlet="templateName; context: ctx">
end note

note top of NgContainer
    Does not create
    extra HTML elements
end note


newpage

left to right direction
title @ViewChild: Dynamically injecting templates


component "AppComponent" {
    package HTML {
        [defaultTab] <<ng-template>> as Template
    }

    package TypeScript {
        [defaultTab] <<TemplateRef>> as Reference
        [ViewChild] <<@Decorator>> as VC
        Template <.. VC: load template
        VC ..> Reference: inject template
    }
}


@enduml